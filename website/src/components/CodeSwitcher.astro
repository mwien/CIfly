---
const { class: className, ...rest } = Astro.props;
---

<div class:list={["code-switcher my-4 relative", className]} {...rest}>
  <div
    class="absolute top-0 right-0 h-10.25 bg-gray-200 dark:bg-gray-700 rounded-tr-lg rounded-bl-lg inline-flex"
  >
    <button
      code-tab="py"
      class="flex items-center justify-center cursor-pointer shadow-sm text-sm bg-gray-50 dark:bg-gray-500 font-bold rounded-lg m-1 p-1 w-16"
      aria-label="Show Python code tab"
    >
      Python
    </button>
    <button
      code-tab="r"
      class="flex items-center justify-center cursor-pointer text-sm font-bold rounded-lg m-1 p-1 w-16"
      aria-label="Show R code tab"
    >
      R
    </button>
  </div>

  <div>
    <div code-content="py">
      <slot name="python-code" />
    </div>
    <div code-content="r" class="hidden">
      <slot name="r-code" />
    </div>
  </div>
</div>

<script>
  function debounce(fn, delay) {
    let timeout;
    return function (...args) {
      clearTimeout(timeout);
      timeout = setTimeout(() => fn(...args), delay);
    };
  }

  function hydrateCodeSwitcher() {
    document.querySelectorAll(".code-switcher").forEach((container) => {
      const tabs = container.querySelectorAll("[code-tab]");
      const contents = container.querySelectorAll("[code-content]");

      function heightUpdate() {
        requestAnimationFrame(() => {
          setTimeout(() => {
            const firstPreElement = contents[0].querySelector("pre");
            firstPreElement.style.height = "auto";
            const wasHidden = contents[0].classList.contains("hidden");
            if (wasHidden) contents[0].classList.remove("hidden");
            const height = firstPreElement.getBoundingClientRect().height;
            if (wasHidden) contents[0].classList.add("hidden");

            contents.forEach((content) => {
              const preElement = content.querySelector("pre");
              preElement.style.height = `${height}px`;
            });
          }, 10);
        });
      }

      heightUpdate();

      window.addEventListener("resize", debounce(heightUpdate, 50));

      tabs.forEach((tab) => {
        tab.addEventListener("click", () => {
          const target = tab.getAttribute("code-tab");

          tabs.forEach((t) => {
            const isTarget = t.getAttribute("code-tab") === target;
            t.classList.toggle("bg-gray-50", isTarget);
            t.classList.toggle("dark:bg-gray-500", isTarget);
            t.classList.toggle("shadow-sm", isTarget);
          });

          contents.forEach((content) => {
            const isMatch = content.getAttribute("code-content") === target;
            content.classList.toggle("hidden", !isMatch);
          });
        });
      });
    });
  }
  if (document.readyState !== "loading") {
    hydrateCodeSwitcher();
  } else {
    document.addEventListener("DOMContentLoaded", function () {
      hydrateCodeSwitcher();
    });
  }
</script>
